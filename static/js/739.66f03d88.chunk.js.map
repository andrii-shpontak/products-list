{"version":3,"file":"static/js/739.66f03d88.chunk.js","mappings":"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","sources":["components/CardCreator.tsx","components/CustomPagination.tsx","components/ProductsList.tsx","components/SearchPanel.tsx","pages/MainPage.tsx"],"sourcesContent":["import { FC, useState, useCallback } from 'react';\r\nimport { Box, Card, CardContent, Typography, CardMedia, Stack } from '@mui/material';\r\nimport { ChevronLeft, ChevronRight, Delete } from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { IState, IData } from '../types';\r\nimport { removeProductById } from '../store/productsSlice';\r\n\r\ninterface IHightLight {\r\n  filter: string;\r\n  descriptionText: string;\r\n}\r\n\r\nconst HightLight = (props: IHightLight): any => {\r\n  const { filter, descriptionText } = props;\r\n\r\n  if (filter.length === 0) {\r\n    return descriptionText;\r\n  }\r\n\r\n  const regexp = new RegExp(filter, 'ig');\r\n  const matchValue = descriptionText.match(regexp);\r\n\r\n  if (!matchValue) {\r\n    return descriptionText;\r\n  }\r\n\r\n  return descriptionText.split(regexp).map((rawString: string, index: number, arr: string[]) => {\r\n    if (index >= arr.length - 1) {\r\n      return rawString;\r\n    }\r\n\r\n    const highlightedString = matchValue.shift();\r\n    return (\r\n      <>\r\n        {rawString}\r\n        <span key={Math.random()} className=\"hightlight\">\r\n          {highlightedString}\r\n        </span>\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nconst CardCreator: FC<IData> = (props) => {\r\n  const searchType: string = useSelector((state: IState) => state?.searchType);\r\n  const dispatch = useDispatch();\r\n  const [imageNum, setImageNum] = useState<number>(0);\r\n  const { id, title, description, price, rating, stock, category, images } = props;\r\n  const searchValue = useSelector((state: IState) => state?.searchBy);\r\n\r\n  const changImage = (imageAction: number): void => {\r\n    if (imageNum + imageAction < 0) {\r\n      setImageNum(images.length - 1);\r\n    } else if (imageNum + imageAction > images.length - 1) {\r\n      setImageNum(0);\r\n    } else {\r\n      setImageNum(imageNum + imageAction);\r\n    }\r\n  };\r\n\r\n  const light = useCallback(\r\n    (descriptionText: string) => {\r\n      return <HightLight filter={searchValue} descriptionText={descriptionText} />;\r\n    },\r\n    [searchValue],\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        margin: '45px auto 0 auto',\r\n        maxWidth: '350px',\r\n        ':hover': { transform: 'scale(1.05)' },\r\n      }}>\r\n      <Card>\r\n        <CardContent sx={{ padding: '25px 25px 0 25px' }}>\r\n          <Stack sx={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n            <Typography variant=\"h6\">ID: {id}</Typography>\r\n            <Delete\r\n              onClick={() => dispatch(removeProductById(id))}\r\n              sx={{ ':hover': { color: '#bc0000', transform: 'scale(1.2)' } }}\r\n              fontSize=\"large\"\r\n            />\r\n          </Stack>\r\n\r\n          <Typography\r\n            sx={{ marginTop: '24px', fontSize: '24px', lineHeight: '30px', fontWeight: 400 }}\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"div\">\r\n            {searchType === 'title' ? light(title) : title}\r\n          </Typography>\r\n          {description && (\r\n            <Typography\r\n              sx={{ marginTop: '24px', fontSize: '24px', lineHeight: '30px', fontWeight: 400 }}\r\n              gutterBottom\r\n              variant=\"body1\"\r\n              component=\"div\">\r\n              {description}\r\n            </Typography>\r\n          )}\r\n          {price && <Typography variant=\"h6\">Price: {price}$</Typography>}\r\n        </CardContent>\r\n        <CardMedia\r\n          sx={{ objectFit: 'contain' }}\r\n          component=\"img\"\r\n          height=\"217\"\r\n          image={images[imageNum]}\r\n          alt={title}\r\n        />\r\n\r\n        {images.length > 1 ? (\r\n          <Stack\r\n            sx={{\r\n              padding: '0 15px',\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              justifyContent: 'space-between',\r\n              alignItems: 'center',\r\n            }}>\r\n            <ChevronLeft\r\n              sx={{ ':hover': { transform: 'scale(1.5)' } }}\r\n              fontSize=\"large\"\r\n              onClick={() => changImage(-1)}\r\n            />\r\n            <Stack sx={{ display: 'flex', flexDirection: 'row' }}>\r\n              {images.map((e, i) => {\r\n                return (\r\n                  <span\r\n                    key={i}\r\n                    style={{\r\n                      width: '10px',\r\n                      height: '10px',\r\n                      backgroundColor: '#000',\r\n                      borderRadius: '100%',\r\n                      margin: '0 3px',\r\n                    }}\r\n                    className={i === imageNum ? 'bigDote' : ''}\r\n                    onClick={() => setImageNum(i)}\r\n                  />\r\n                );\r\n              })}\r\n            </Stack>\r\n            <ChevronRight\r\n              sx={{ ':hover': { transform: 'scale(1.5)' } }}\r\n              fontSize=\"large\"\r\n              onClick={() => changImage(1)}\r\n            />\r\n          </Stack>\r\n        ) : null}\r\n\r\n        <CardContent sx={{ padding: '25px 25px 0 25px' }}>\r\n          <Typography variant=\"h6\">Rating: {rating}</Typography>\r\n          {stock && <Typography variant=\"h6\">Stock: {stock}</Typography>}\r\n          {category && (\r\n            <Typography variant=\"h6\">\r\n              Category: {searchType === 'category' ? light(category) : category}\r\n            </Typography>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CardCreator;\r\n","import React from 'react';\r\nimport { Pagination, Stack } from '@mui/material';\r\n\r\ninterface IPagination {\r\n  offset: number;\r\n  totalProducts: number;\r\n  paginate: any;\r\n}\r\n\r\nconst CustomPagination: React.FC<IPagination> = ({ offset, totalProducts, paginate }) => {\r\n  let jobsNumbers = 0;\r\n\r\n  for (let i = 1; i <= Math.ceil(totalProducts / offset); i++) {\r\n    jobsNumbers = i;\r\n  }\r\n  return (\r\n    <Stack sx={{ margin: '0 auto 25px auto' }}>\r\n      {\r\n        <Pagination\r\n          className=\"paginate\"\r\n          count={jobsNumbers}\r\n          onChange={(_, num) => paginate(num)}\r\n          variant=\"outlined\"\r\n          shape=\"rounded\"\r\n        />\r\n      }\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default CustomPagination;\r\n","import { useEffect, useMemo, useState } from 'react';\r\nimport { Box, Button, Stack, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nimport { IData, IState, TMySort } from '../types';\r\nimport CardCreator from './CardCreator';\r\nimport CustomPagination from './CustomPagination';\r\nimport { setChangedData, updateSearchValue } from '../store/productsSlice';\r\n\r\nconst ProductsList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const data: IData[] = useSelector((state: IState) => state?.productsData);\r\n  const searchType: 'title' | 'category' = useSelector((state: IState) => state?.searchType);\r\n  const searchValue: string = useSelector((state: IState) => state?.searchBy);\r\n  const sortedData: IData[] = useSelector((state: IState) => state?.changedData);\r\n  const mySort: TMySort = useSelector((state: IState) => state?.mySort);\r\n  const myFilter: TMySort = useSelector((state: IState) => state?.myFilter);\r\n  const myFilterText: string = useSelector((state: IState) => state?.myFilterText);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const offset = 5;\r\n\r\n  const lastProductIndex = currentPage * offset;\r\n  const firstProductIndex = lastProductIndex - offset;\r\n\r\n  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    if (mySort === 'none' || typeof data === 'undefined') {\r\n      dispatch(setChangedData({}));\r\n      return;\r\n    } else if (typeof data !== 'undefined') {\r\n      dispatch(setChangedData([...data].sort((a, b) => (a[mySort]! < b[mySort]! ? -1 : 1))));\r\n      dispatch(updateSearchValue(''));\r\n    }\r\n  }, [mySort, dispatch, data]);\r\n\r\n  const findedProducts = useMemo(() => {\r\n    setCurrentPage(1);\r\n    return data?.filter((data) => {\r\n      return data[searchType].toLowerCase().includes(searchValue.toLowerCase());\r\n    });\r\n  }, [searchValue, data, searchType]);\r\n\r\n  useEffect(() => {\r\n    if (myFilter === 'none' || myFilterText === '') {\r\n      dispatch(setChangedData({}));\r\n      return;\r\n    } else if (typeof data !== 'undefined') {\r\n      setCurrentPage(1);\r\n      dispatch(\r\n        setChangedData(\r\n          data?.filter((data) =>\r\n            data[myFilter]!.toString()\r\n              .toLowerCase()\r\n              .includes(myFilterText.toString().toLowerCase()),\r\n          ),\r\n        ),\r\n      );\r\n    }\r\n  }, [myFilterText, myFilter, data]);\r\n\r\n  const renderData: IData[] = useMemo(() => {\r\n    if (searchValue === '' && mySort === 'none' && myFilterText === '') {\r\n      return data;\r\n    } else if (searchValue !== '' && mySort === 'none' && myFilterText === '') {\r\n      return findedProducts;\r\n    } else if (mySort !== 'none' || myFilterText !== '') {\r\n      return sortedData;\r\n    }\r\n    return data;\r\n  }, [searchValue, mySort, data, findedProducts, sortedData, myFilter, myFilterText]);\r\n\r\n  return (\r\n    <Stack>\r\n      <Link style={{ textDecoration: 'none', margin: '0 auto' }} to=\"/products-list/addform\">\r\n        <Button sx={{ height: '50px' }} startIcon={<AddCircleIcon />}>\r\n          Add new product\r\n        </Button>\r\n      </Link>\r\n      <Box\r\n        sx={{\r\n          display: 'grid',\r\n          gridTemplateColumns: { xs: '1fr', sm: '1fr 1fr', lg: '1fr 1fr 1fr' },\r\n          columnGap: 2,\r\n          marginBottom: '50px',\r\n        }}>\r\n        {Array.isArray(renderData)\r\n          ? renderData.slice(firstProductIndex, lastProductIndex).map((item) => {\r\n              return <CardCreator key={item.id} {...item} />;\r\n            })\r\n          : null}\r\n        <Box></Box>\r\n      </Box>\r\n      {renderData.length > offset ? (\r\n        <CustomPagination offset={offset} totalProducts={renderData.length} paginate={paginate} />\r\n      ) : null}\r\n      {renderData.length === 0 ? (\r\n        <Typography variant=\"h4\" sx={{ margin: '25px auto', textAlign: 'center' }}>\r\n          {data.length === 0 ? 'No data...' : 'No matches...'}\r\n        </Typography>\r\n      ) : null}\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import { useState, useEffect } from 'react';\r\nimport {\r\n  InputAdornment,\r\n  Stack,\r\n  Input,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  Paper,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Search } from '@mui/icons-material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nimport {\r\n  setMyFilter,\r\n  setMySort,\r\n  setSearchType,\r\n  updateMyFilterText,\r\n  updateSearchValue,\r\n} from '../store/productsSlice';\r\nimport { IState, TMySort } from '../types';\r\n\r\nconst SearchPanel: React.FC = () => {\r\n  const searchType: 'title' | 'category' = useSelector((state: IState) => state?.searchType);\r\n  const mySort: TMySort = useSelector((state: IState) => state?.mySort);\r\n  const myFilter: TMySort = useSelector((state: IState) => state?.myFilter);\r\n\r\n  const [searchValue, setSearchValue] = useState<string>('');\r\n  const [filterValue, setFilterValue] = useState<string>('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSetSearchType = (event: SelectChangeEvent) => {\r\n    dispatch(setSearchType(event.target.value as string));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(updateSearchValue(searchValue));\r\n  }, [dispatch, searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (myFilter === 'none') {\r\n      setFilterValue('');\r\n    }\r\n  }, [myFilter, setFilterValue, filterValue]);\r\n\r\n  useEffect(() => {\r\n    dispatch(updateMyFilterText(filterValue));\r\n  }, [filterValue, dispatch]);\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      }}>\r\n      {/* Search input */}\r\n      <Typography margin={2} textAlign={'center'} variant=\"h4\">\r\n        Search, sort and filter fields\r\n      </Typography>\r\n      <Stack\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          margin: '0 auto',\r\n        }}>\r\n        <Input\r\n          sx={{\r\n            maxWidth: '300px',\r\n            height: '56px',\r\n            fontSize: '18px',\r\n            border: '1px solid rgba(0,0,0, 0.5)',\r\n            borderRadius: '5px',\r\n          }}\r\n          name=\"search\"\r\n          placeholder=\"Search...\"\r\n          value={searchValue}\r\n          onChange={(e) => {\r\n            setSearchValue(e.target.value);\r\n            dispatch(setMySort('none'));\r\n            dispatch(setMyFilter('none'));\r\n          }}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <Search sx={{ cursor: 'pointer', marginLeft: '10px' }} />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        <FormControl>\r\n          <Select name=\"searchCategory\" value={searchType} onChange={onSetSearchType}>\r\n            <MenuItem value={'title'}>By name</MenuItem>\r\n            <MenuItem value={'category'}>By category</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Stack>\r\n      {/* End search input */}\r\n\r\n      {/* Sort and filter */}\r\n      <Stack\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          alignItems: 'top',\r\n          margin: '15px auto 0 auto',\r\n        }}>\r\n        {/* Sort */}\r\n\r\n        <FormControl style={{ textAlign: 'center', margin: '10px' }}>\r\n          <Typography variant=\"h6\">Sotr by</Typography>\r\n          <Select\r\n            name=\"sort\"\r\n            value={mySort}\r\n            onChange={(e) => {\r\n              dispatch(setMySort(e.target.value));\r\n              setSearchValue('');\r\n              dispatch(setMyFilter('none'));\r\n            }}>\r\n            <MenuItem value={'none'}>Select</MenuItem>\r\n            <MenuItem value={'id'}>By ID</MenuItem>\r\n            <MenuItem value={'title'}>By name</MenuItem>\r\n            <MenuItem value={'description'}>By description</MenuItem>\r\n            <MenuItem value={'price'}>By price</MenuItem>\r\n            <MenuItem value={'rating'}>By rating</MenuItem>\r\n            <MenuItem value={'stock'}>By stock</MenuItem>\r\n            <MenuItem value={'category'}>By category</MenuItem>\r\n          </Select>\r\n          <Typography variant=\"body1\">(Ascending)</Typography>\r\n        </FormControl>\r\n\r\n        {/* Filter */}\r\n\r\n        <FormControl style={{ textAlign: 'center', margin: '10px' }}>\r\n          <Typography variant=\"h6\">Filter type</Typography>\r\n          <Select\r\n            name=\"filter\"\r\n            value={myFilter}\r\n            onChange={(e) => {\r\n              dispatch(setMyFilter(e.target.value));\r\n              dispatch(setMySort('none'));\r\n              setSearchValue('');\r\n            }}>\r\n            <MenuItem value={'none'}>Select</MenuItem>\r\n            <MenuItem value={'id'}>By ID</MenuItem>\r\n            <MenuItem value={'title'}>By name</MenuItem>\r\n            <MenuItem value={'description'}>By description</MenuItem>\r\n            <MenuItem value={'price'}>By price</MenuItem>\r\n            <MenuItem value={'rating'}>By rating</MenuItem>\r\n            <MenuItem value={'stock'}>By stock</MenuItem>\r\n            <MenuItem value={'category'}>By category</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Filter text input */}\r\n\r\n        <FormControl style={{ margin: '10px' }}>\r\n          <Typography variant=\"h6\">Filter text</Typography>\r\n          <Input\r\n            sx={{\r\n              maxWidth: '300px',\r\n              height: '56px',\r\n              fontSize: '18px',\r\n              border: '1px solid rgba(0,0,0, 0.5)',\r\n              borderRadius: '5px',\r\n              paddingLeft: '15px',\r\n            }}\r\n            disabled={myFilter === 'none' ? true : false}\r\n            name=\"filter\"\r\n            placeholder=\"Filter...\"\r\n            value={filterValue}\r\n            onChange={(e) => setFilterValue(e.target.value)}\r\n          />\r\n        </FormControl>\r\n      </Stack>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import React from 'react';\r\nimport { Container } from '@mui/material';\r\n\r\nimport ProductsList from '../components/ProductsList';\r\nimport SearchPanel from '../components/SearchPanel';\r\nimport { IPagesProps } from '../types';\r\nimport Spinner from '../components/Spinner';\r\n\r\nconst MainPage: React.FC<IPagesProps> = ({ isError, isLoading, errorText }) => {\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n  if (isError) {\r\n    return (\r\n      <div style={{ margin: '25px auto', textAlign: 'center' }} className=\"errorMessage\">\r\n        {errorText}\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <Container>\r\n      <SearchPanel />\r\n      <ProductsList />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["HightLight","props","filter","descriptionText","length","regexp","RegExp","matchValue","match","split","map","rawString","index","arr","highlightedString","shift","_jsxs","_Fragment","children","_jsx","className","Math","random","searchType","useSelector","state","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","imageNum","setImageNum","id","title","description","price","rating","stock","category","images","searchValue","searchBy","changImage","imageAction","light","useCallback","Box","sx","margin","maxWidth","transform","Card","CardContent","padding","Stack","display","flexDirection","justifyContent","Typography","variant","Delete","onClick","removeProductById","color","fontSize","marginTop","lineHeight","fontWeight","gutterBottom","component","CardMedia","objectFit","height","image","alt","alignItems","ChevronLeft","e","i","style","width","backgroundColor","borderRadius","ChevronRight","_ref","offset","totalProducts","paginate","jobsNumbers","ceil","Pagination","count","onChange","_","num","shape","data","productsData","sortedData","changedData","mySort","myFilter","myFilterText","currentPage","setCurrentPage","lastProductIndex","firstProductIndex","useEffect","setChangedData","_toConsumableArray","sort","a","b","updateSearchValue","findedProducts","useMemo","toLowerCase","includes","toString","renderData","Link","textDecoration","to","Button","startIcon","AddCircleIcon","gridTemplateColumns","xs","sm","lg","columnGap","marginBottom","Array","isArray","slice","item","CardCreator","_objectSpread","CustomPagination","pageNumber","textAlign","setSearchValue","_useState3","_useState4","filterValue","setFilterValue","updateMyFilterText","Paper","Input","border","name","placeholder","value","target","setMySort","setMyFilter","startAdornment","InputAdornment","position","Search","cursor","marginLeft","FormControl","Select","event","setSearchType","MenuItem","paddingLeft","disabled","isError","isLoading","errorText","Spinner","Container","SearchPanel","ProductsList"],"sourceRoot":""}