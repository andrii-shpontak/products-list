{"version":3,"file":"static/js/150.8b81dd17.chunk.js","mappings":"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","sources":["pages/AddForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Button, Paper, Typography } from '@mui/material';\r\n\r\nimport { addNewProduct } from '../store/productsSlice';\r\n\r\nconst AddForm: React.FC<{}> = () => {\r\n  const [ifSend, setIfSend] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const initialFormValues = {\r\n    id: uuidv4(),\r\n    title: '',\r\n    author: '',\r\n    yearOfPublication: 0,\r\n    rating: 0,\r\n    category: 'others',\r\n    images: [\r\n      'https://us.123rf.com/450wm/get4net/get4net2112/get4net211221910/179510358-unknown-address-of-parcel-item-from-logistic-website-portal.jpg?ver=6',\r\n    ],\r\n  };\r\n\r\n  if (ifSend) {\r\n    return <Navigate to=\"/products-list/\" />;\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ paddingBottom: '20px', margin: '0 auto', maxWidth: '500px' }}>\r\n      <Formik\r\n        initialValues={initialFormValues}\r\n        validationSchema={Yup.object({\r\n          title: Yup.string().min(2, 'Minimum 2 letters').required('This field is required'),\r\n          author: Yup.string().min(2, 'Minimum 2 letters').required('This field is required'),\r\n          yearOfPublication: Yup.number()\r\n            .min(1, 'Not zero value')\r\n            .max(2023, 'The maximum value is 2023')\r\n            .required('This field is required'),\r\n          rating: Yup.number()\r\n            .min(1, 'The minimum rating is 1')\r\n            .max(5, '5 is the highest rating')\r\n            .required('This field is required'),\r\n        })}\r\n        onSubmit={(values, actions) => {\r\n          dispatch(addNewProduct(values));\r\n          actions.resetForm();\r\n          actions.setSubmitting(false);\r\n          setIfSend(true);\r\n        }}>\r\n        <Form\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            marginTop: '20px',\r\n            textAlign: 'center',\r\n          }}>\r\n          <Typography variant=\"h3\">Add new product</Typography>\r\n          <Typography variant=\"h6\">Title of product</Typography>\r\n          <Field style={{ fontSize: '18px' }} id=\"title\" name=\"title\" type=\"text\" />\r\n          <ErrorMessage name=\"title\" component=\"div\" className=\"errorMessage\" />\r\n\r\n          <Typography variant=\"h6\">Author of product</Typography>\r\n          <Field style={{ fontSize: '18px' }} id=\"author\" name=\"author\" type=\"text\" />\r\n          <ErrorMessage name=\"author\" component=\"div\" className=\"errorMessage\" />\r\n\r\n          <Typography variant=\"h6\">Year of publication</Typography>\r\n          <Field\r\n            style={{ fontSize: '18px' }}\r\n            id=\"yearOfPublication\"\r\n            name=\"yearOfPublication\"\r\n            type=\"number\"\r\n          />\r\n          <ErrorMessage name=\"yearOfPublication\" component=\"div\" className=\"errorMessage\" />\r\n\r\n          <Typography variant=\"h6\">Rating of product</Typography>\r\n          <Field style={{ fontSize: '18px' }} id=\"rating\" name=\"rating\" type=\"number\" />\r\n          <ErrorMessage name=\"rating\" component=\"div\" className=\"errorMessage\" />\r\n\r\n          <Button sx={{ marginTop: '15px' }} variant=\"contained\" color=\"success\" type=\"submit\">\r\n            Add\r\n          </Button>\r\n          <Button sx={{ marginTop: '15px' }} variant=\"contained\" color=\"warning\" type=\"reset\">\r\n            reser\r\n          </Button>\r\n          <Link style={{ textDecoration: 'none' }} to=\"/\">\r\n            <Button sx={{ marginTop: '15px' }} variant=\"contained\" color=\"error\">\r\n              Cancel\r\n            </Button>\r\n          </Link>\r\n        </Form>\r\n      </Formik>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AddForm;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","ifSend","setIfSend","dispatch","useDispatch","initialFormValues","id","uuidv4","title","author","yearOfPublication","rating","category","images","_jsx","Navigate","to","Paper","sx","paddingBottom","margin","maxWidth","children","Formik","initialValues","validationSchema","Yup","min","required","max","onSubmit","values","actions","addNewProduct","resetForm","setSubmitting","_jsxs","Form","style","display","flexDirection","justifyContent","alignItems","marginTop","textAlign","Typography","variant","Field","fontSize","name","type","ErrorMessage","component","className","Button","color","Link","textDecoration"],"sourceRoot":""}